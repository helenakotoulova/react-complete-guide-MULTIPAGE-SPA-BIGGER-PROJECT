{"version":3,"sources":["components/UI/LoadingSpinner.js","components/layout/MainNavigation.module.css","hooks/hooks/use-http.js","lib/lib/api.js","components/comments/NewCommentForm.module.css","components/layout/Layout.module.css","components/comments/Comments.module.css","components/UI/LoadingSpinner.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/layout/MainNavigation.js","components/layout/Layout.js","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","App.js","index.js"],"names":["LoadingSpinner","className","classes","spinner","module","exports","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","a","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","id","push","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","MainNavigation","header","logo","nav","to","navData","isActive","active","Layout","props","main","children","NewCommentForm","commentTextRef","useRef","useState","quoteValue","setQuoteValue","submitFormHandler","event","preventDefault","enteredText","current","value","text","onAddComment","useEffect","form","onSubmit","control","htmlFor","rows","ref","onChange","target","actions","CommentItem","item","CommentsList","comments","map","comment","Comments","isAddingComment","setIsAddingComment","useParams","loadedComments","addCommentHandler","length","onClick","NewQuote","React","lazy","QuotesDetail","NotFound","AllQuotes","App","fallback","path","element","replace","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0b9b3d38.chunk.js","sourcesContent":["import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__grQXp\",\"logo\":\"MainNavigation_logo__1iWvC\",\"nav\":\"MainNavigation_nav__4o7wA\",\"active\":\"MainNavigation_active__1k9LN\"};","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN = 'https://multi-page-spa-quotes-c7d68-default-rtdb.firebaseio.com';\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quote.');\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: 'POST',\n    body: JSON.stringify(quoteData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not create quote.');\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`, {\n    method: 'POST',\n    body: JSON.stringify(requestData.commentData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not add comment.');\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not get comments.');\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__6hx2q\",\"loading\":\"NewCommentForm_loading__292j7\",\"control\":\"NewCommentForm_control__2LWOY\",\"actions\":\"NewCommentForm_actions__2taGY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__1yDML\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__2RwZV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__27au0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__g69El\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__QXNdU\"};","import classes from \"./MainNavigation.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst MainNavigation = () => {\r\n  return (\r\n    <header className={classes.header}>\r\n      <div className={classes.logo}>Great Quotes</div>\r\n      <nav className={classes.nav}>\r\n        <ul>\r\n          <li>\r\n            <NavLink to=\"/quotes\" className={navData => navData.isActive ? classes.active : '' }>\r\n              All Quotes\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/new-quote\" className={navData => navData.isActive ? classes.active : '' }>\r\n              Add a Quote\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default MainNavigation;\r\n","import { Fragment } from \"react\";\r\nimport MainNavigation from \"./MainNavigation\";\r\nimport classes from './Layout.module.css';\r\n\r\nconst Layout = (props) => {\r\n    return (\r\n        <Fragment>\r\n            <MainNavigation />\r\n            <main className={classes.main}>{props.children}</main>\r\n        </Fragment>\r\n      )\r\n}\r\n\r\nexport default Layout;","import { useRef, useEffect, useState } from \"react\";\nimport useHttp from \"../../hooks/hooks/use-http\";\nimport classes from \"./NewCommentForm.module.css\";\nimport { addComment } from \"../../lib/lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nconst NewCommentForm = (props) => {\n  const { sendRequest, status, error } = useHttp(addComment);\n  const commentTextRef = useRef();\n  const [quoteValue, setQuoteValue] = useState(\"\");\n\n  const readQuoteValue = (event) => {\n    setQuoteValue(event.target.value);\n  };\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n    // optional: Could validate here\n    const enteredText = commentTextRef.current.value;\n    sendRequest({ commentData: { text: enteredText }, quoteId: props.quoteId });\n    setQuoteValue(\"\");\n  };\n\n  // budeme destructurovat props:\n  const { onAddComment } = props;\n  useEffect(() => {\n    if (status === \"completed\" && !error) {\n      onAddComment();\n    }\n  }, [status, error, onAddComment]);\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === \"pending\" && (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea\n          id=\"comment\"\n          rows=\"5\"\n          ref={commentTextRef}\n          value={quoteValue}\n          onChange={readQuoteValue}\n        ></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useState, useEffect, useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport useHttp from \"../../hooks/hooks/use-http\";\nimport { getAllComments } from \"../../lib/lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from \"./CommentsList\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const { quoteId } = params;\n\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  const addCommentHandler = useCallback(() => { // dame tady to useCallback aby se nam ta funkce pokazde znovu nevytvarela,\n    // protoze je to nase dependency v useEffectu v newCommentForm. tzn spoustelo by se to moc casto.\n    sendRequest(quoteId); // kdyz pridavame novy koment, chceme zas fetchnout ty data.\n  },[sendRequest,quoteId]);\n\n  let comments;\n  if (status === \"pending\") {\n    comments = (\n      <div>\n        <LoadingSpinner />\n      </div>\n    );\n  }\n  if (status === \"completed\" && (loadedComments && loadedComments.length > 0)) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n  if (\n    status === \"completed\" &&\n    (!loadedComments || loadedComments.length === 0)\n  ) {\n    comments = <p className='centered'>No comments were added yet.</p>\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm onAddComment={addCommentHandler} quoteId={quoteId} />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import React, { Suspense } from \"react\";\nimport { Route, Routes, Navigate, Link } from \"react-router-dom\";\n//import AllQuotes from \"./pages/AllQuotes\";\n//import NewQuote from \"./pages/NewQuote\";\n//import QuotesDetail from \"./pages/QuoteDetail\";\nimport Layout from \"./components/layout/Layout\";\n//import NotFound from \"./pages/NotFound\";\nimport Comments from \"./components/comments/Comments\";\nimport LoadingSpinner from \"./components/UI/LoadingSpinner\";\n\n//concept lazy loading. misto importu vyse udelame nasledujici:\nconst NewQuote = React.lazy(() => import(\"./pages/NewQuote\"));\n// takhle se to bude donwloadovat jen kdyz to bude potreba.\n// problem ale je ze ten download muze chvili trvat. proto pridame Susepnse komponentu,\n// ktera bude obsahovat fallback function, ktera bude zobrazovat nejaky obsah na strance nez se to downloadne.\nconst QuotesDetail = React.lazy(() => import(\"./pages/QuoteDetail\"));\nconst NotFound = React.lazy(() => import(\"./pages/NotFound\"));\nconst AllQuotes = React.lazy(() => import(\"./pages/AllQuotes\"));\n\nfunction App() {\n  return (\n    <div>\n      <Suspense\n        fallback={\n          <div className=\"centered\">\n            <LoadingSpinner />\n          </div>\n        }\n      >\n        <Layout>\n          <Routes>\n            <Route path=\"/\" element={<Navigate replace to=\"/quotes\" />} />\n            <Route path=\"/quotes\" element={<AllQuotes />} />\n            <Route path=\"/quotes/:quoteId\" element={<QuotesDetail />}>\n              <Route\n                path=\"\"\n                element={\n                  <div className=\"centered\">\n                    <Link className=\"btn--flat\" to={`comments`}>\n                      Load Comments\n                    </Link>\n                  </div>\n                }\n              />\n              <Route path={`comments`} element={<Comments />} />\n            </Route>\n            <Route path=\"/new-quote\" element={<NewQuote />} />\n            <Route path=\"*\" element={<NotFound />} />\n          </Routes>\n        </Layout>\n      </Suspense>\n    </div>\n  );\n}\n\nexport default App;\n\n/*\nDEPLOYING REACT APP:\n- LAZY LOADING - load only the code which it's needed, tzn. \npokud ja si rozkliknu tu stranku, na zacatku staci aby bylo downloadovane jen to allQuotes,\nnemusi byt downloadovane i to addQuote - treba na to ani nikdy nekliknu.\n*/\n\n/*\nSwitch bude prochazet ty Routes a jestli zadna nebude matchovat, tak dojde na tuhle:\n <Route path='*'>\n            <NotFound />\n</Route>\n\nTo '*' znamena match all. takze kdyz nebude zadna path sedet, zobrazi se ta stranka NotFound.\n*/\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n"],"sourceRoot":""}